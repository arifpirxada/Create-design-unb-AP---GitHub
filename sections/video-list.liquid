<style>

  .video-section-container {
    padding: 2rem 10rem;
    max-width: 100vw;
    width: 100vw;
  }

  .video-container {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 28px;
  }


  .video-container .video {
    width: 100%;
    height: auto;
  }

  .video-container .video-parent {
    flex: 0 0 calc(100% / {{ section.settings.videos-per-row }} - 28px*({{ section.settings.videos-per-row }} - 1) / 2);
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .video-container .video-parent .video-control {
    position: absolute;
    cursor: pointer;
    border-radius: 100%;
    transition: opacity 0.2s;
  }

  .video-container .video-parent .video-pause {
    display: none;
  }

  @media screen and (max-width: 850px) {
    .video-section-container {
      padding: 2rem;
    }
  }

  @media screen and (max-width: 550px) {
    .video-container .video-parent {
      flex: 0 0 100%;
    }
  }

</style>

<div class="video-section-container">
  <div class="video-container">
    {% for block in section.blocks %}
      <div class="video-parent">
        <video
          width="800"
          class="video"
          height="auto"
          src="{{ block.settings.video.sources[0].url }}"
          {% if block.settings.autoplay %}
          autoplay="true"
          {% endif %}
          {% if block.settings.muted %}
          muted="true"
          {% endif %}
          {% if block.settings.thumbnail %}
          poster="{{ block.settings.thumbnail |  image_url }}"
          {% endif %}></video>

        <img
          onclick="playVideo(this)"
          class="video-control video-play"
          src="{{ "play.png" | asset_url }}"
          width="50"
          height="auto"
          alt="Video play button">
        <img
          onclick="pauseVideo(this)"
          class="video-control video-pause"
          src="{{ "pause.png" | asset_url }}"
          width="50"
          height="auto"
          alt="Video play button">

      </div>
    {% endfor %}
  </div>

</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const videoContainer = document.querySelector('.video-container');
    const videos = videoContainer.querySelectorAll('.video');
  
    videos.forEach(video => {
      video.addEventListener('mouseenter', () => {
        video.setAttribute('controls', 'controls');
      });
      
      video.addEventListener('mouseleave', () => {
        video.removeAttribute('controls');
      });

      video.addEventListener('play', () => {
        const videoParent = video.closest('.video-parent');
        const playBtn = videoParent.querySelector('.video-play');
        const pauseBtn = videoParent.querySelector('.video-pause');

        if (playBtn && pauseBtn) {
          playBtn.style.display = 'none';

          setTimeout(() => {
            pauseBtn.style.opacity = 0;
          }, 800);
        }
      });
    });
  });
  
  const playVideo = (playBtn) => {
    let videoParent = playBtn.closest('.video-parent');
    let video = videoParent.querySelector('.video');
    let pauseBtn = videoParent.querySelector(".video-pause");
  
    video.play();
    playBtn.style.display = "none"
    pauseBtn.style.display = "block"
  
    setTimeout(() => {
      pauseBtn.style.opacity = 0;
    }, 800);
  
    video.addEventListener('click', () => {
        pauseBtn.style.opacity = 1;
        setTimeout(() => {
          pauseBtn.style.opacity = 0;
        }, 800);
    });
  }
  
  const pauseVideo = (pauseBtn) => {
    let videoParent = pauseBtn.closest('.video-parent');
    let video = videoParent.querySelector('.video');
    let playBtn = videoParent.querySelector(".video-play");
  
    video.pause();
    pauseBtn.style.display = "none"
    playBtn.style.display = "block"
  }
</script>

{% schema %}
  {
    "name": "Video list",
    "tag": "section",
    "class": "section",
    "settings": [
      {
        "type": "number",
        "id": "videos-per-row",
        "label": "Number of videos in one row",
        "default": 2
      }
    ],
    "blocks": [
      {
        "type": "video",
        "name": "Video",
        "settings": [
          {
            "type": "video",
            "id": "video",
            "label": "Video"
          }, {
            "type": "image_picker",
            "id": "thumbnail",
            "label": "Thumbnail"
          }, {
            "type": "checkbox",
            "id": "autoplay",
            "label": "Autoplay video",
            "default": false
          }, {
            "type": "checkbox",
            "id": "muted",
            "label": "Keep  video muted",
            "default": false
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Video list"
      }
    ]
  }
{% endschema %}
<style>

  .video-section-container {
    max-width: 98vw;
    width: 98vw;
  }

  #section-{{ section.id }} {
    padding: {{ section.settings.vertical-padding }}rem {{ section.settings.horizontal-padding  }}rem;
  }

  .video-container {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 28px;
  }


  .video-container .video {
    width: 100%;
    height: auto;
  }

  .video-container .video-parent {
    /* flex: 0 0 calc(100% / {{ section.settings.videos-per-row }} - 28px*({{ section.settings.videos-per-row }} - 1) / 2); */
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }
  
  #section-{{ section.id }} .video-container .video-parent {
    flex: 0 0 calc(100% / {{ section.settings.videos-per-row }} - 28px*({{ section.settings.videos-per-row }} - 1) / 2) !important;
  }
  
  .video-container .video-parent p {
    font-size: 2.6rem;
    font-weight: bold;
  }

  .video-container .video-parent .video-control {
    position: absolute;
    cursor: pointer;
    border-radius: 100%;
    transition: opacity 0.2s;
  }

  .video-container .video-parent .video-pause {
    display: none;
  }

  .more-width {
      flex: 0 0 calc(100% / 2 - 28px / 2) !important;
  }

  @media screen and (max-width: 850px) {
    .video-section-container {
      padding: 2rem !important;
    }
  }

  @media screen and (max-width: 768px) {
    #section-{{ section.id }} .video-container .video-parent {
      flex: 0 0 100% !important;
    }
    .more-width {
      flex: 0 0 100% !important;
    }
  }

</style>

<div id="section-{{ section.id }}" class="video-section-container">
  <div class="video-container">
    {% for block in section.blocks %}
      <div class="video-parent {% if block.settings.more-width %}more-width{% endif %}">
        {% if block.type == "video" %}

          {{
            block.settings.video
            | video_tag:
              image_size: '1100x',
              autoplay: block.settings.autoplay,
              muted: block.settings.muted,
              class: "video video-element"
          }}
          <img
            onclick="playVideo(this)"
            class="video-control video-play"
            src="{{ "play.png" | asset_url }}"
            width="50"
            height="auto"
            alt="Video play button">
          {% if block.settings.below-text != blank %}
            <p>{{ block.settings.below-text }}</p>
          {% endif %}
        {% else %}
        <img class="video" src="{{ block.settings.image |  image_url  }}" width="800" height="auto" alt="">
        {% endif %}
      </div>
    {% endfor %}
  </div>

</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const videoContainer = document.querySelectorAll('.video-container');
    videoContainer.forEach(item => { 
      const videos = item.querySelectorAll('.video-element');
    
      videos.forEach(video => {
        video.addEventListener('mouseenter', () => {
          video.setAttribute('controls', 'controls');
        });
        
        video.addEventListener('mouseleave', () => {
          video.removeAttribute('controls');
        });
    
        video.addEventListener('play', () => {
          pauseAllOtherVideos(video); // Pause all other videos when this one starts playing
          const videoParent = video.closest('.video-parent');
          const playBtn = videoParent.querySelector('.video-play');
    
          if (playBtn) {
            playBtn.style.display = 'none';
          }
        });
    
        video.addEventListener('pause', () => {
          const videoParent = video.closest('.video-parent');
          const playBtn = videoParent.querySelector('.video-play');
    
          if (playBtn) {
            playBtn.style.display = 'block';
          }
        });
      });
    });
  })
  
  const playVideo = (playBtn) => {
    let videoParent = playBtn.closest('.video-parent');
    let video = videoParent.querySelector('.video-element');
  
    video.play();
    playBtn.style.display = "none"
    pauseAllOtherVideos(video)
  }
  
  function pauseAllOtherVideos(currentVideo) {
    const videos = document.querySelectorAll('.video-element');
    videos.forEach(video => {
      if (video !== currentVideo && !video.paused) {
        video.pause();
        const videoParent = video.closest('.video-parent');
        const playBtn = videoParent.querySelector('.video-play');
  
        if (playBtn) {
          playBtn.style.display = 'block';
        }
      }
    });
  }
</script>

{% schema %}
  {
    "name": "Media list",
    "tag": "section",
    "class": "section",
    "settings": [
      {
        "type": "number",
        "id": "videos-per-row",
        "label": "Number of videos in one row",
        "default": 2
      },
      {
        "type": "range",
        "id": "vertical-padding",
        "label": "Vertical padding",
        "default": 3,
        "min": 0,
        "max": 20,
        "step": 0.5
      },
      {
        "type": "range",
        "id": "horizontal-padding",
        "label": "Horizontal padding",
        "default": 10,
        "min": 0,
        "max": 20,
        "step": 0.5
      }
    ],
    "blocks": [
      {
        "type": "video",
        "name": "Video",
        "settings": [
          {
            "type": "video",
            "id": "video",
            "label": "Video"
          }, {
            "type": "checkbox",
            "id": "autoplay",
            "label": "Autoplay video",
            "default": false
          }, {
            "type": "checkbox",
            "id": "muted",
            "label": "Keep video muted",
            "default": false
          }, {
            "type": "text",
            "id": "below-text",
            "label": "Below Text"
          }, {
            "type": "checkbox",
            "id": "more-width",
            "label": "Take more width",
            "default": false
          }
        ]
      }, {
        "type": "image_picker",
        "name": "image",
        "settings": [
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          }, 
          {
            "type": "checkbox",
            "id": "more-width",
            "label": "Take more width",
            "default": false
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Media list"
      }
    ]
  }
{% endschema %}